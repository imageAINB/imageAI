arguments: F:/desktop/±œ…Ë/imageAI/manage.py runserver
--------------------
tensorflow version: 1.7.0
--------------------
git hash: b'7a229e6d787b94fe326d7a6f9e8a3741f51d96cf'
--------------------
b'diff --git a/contributed/__pycache__/__init__.cpython-36.pyc b/contributed/__pycache__/__init__.cpython-36.pyc\nindex 463e03a..a87daa3 100644\nBinary files a/contributed/__pycache__/__init__.cpython-36.pyc and b/contributed/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/contributed/__pycache__/predict.cpython-36.pyc b/contributed/__pycache__/predict.cpython-36.pyc\nindex 4223d4a..9a02e56 100644\nBinary files a/contributed/__pycache__/predict.cpython-36.pyc and b/contributed/__pycache__/predict.cpython-36.pyc differ\ndiff --git a/contributed/predict.py b/contributed/predict.py\nindex 85d0707..317fc6d 100644\n--- a/contributed/predict.py\n+++ b/contributed/predict.py\n@@ -34,7 +34,6 @@ import numpy as np\n import argparse\n import os\n import sys\n-sys.path.append(os.path.abspath(\'..\'))\n import src.facenet as facenet\n import math\n import pickle\ndiff --git a/data/images/in/Johnson/Johnson_1.jpg b/data/images/in/Johnson/Johnson_1.jpg\ndeleted file mode 100644\nindex c880d0f..0000000\nBinary files a/data/images/in/Johnson/Johnson_1.jpg and /dev/null differ\ndiff --git a/data/images/in/Johnson/Johnson_2.jpg b/data/images/in/Johnson/Johnson_2.jpg\ndeleted file mode 100644\nindex c6bc464..0000000\nBinary files a/data/images/in/Johnson/Johnson_2.jpg and /dev/null differ\ndiff --git a/data/images/in/Johnson/Johnson_3.jpeg b/data/images/in/Johnson/Johnson_3.jpeg\ndeleted file mode 100644\nindex efe5a3e..0000000\nBinary files a/data/images/in/Johnson/Johnson_3.jpeg and /dev/null differ\ndiff --git a/data/images/in/Johnson/Johnson_4.jpg b/data/images/in/Johnson/Johnson_4.jpg\ndeleted file mode 100644\nindex aab4478..0000000\nBinary files a/data/images/in/Johnson/Johnson_4.jpg and /dev/null differ\ndiff --git a/data/images/in/Johnson/Johnson_5.jpg b/data/images/in/Johnson/Johnson_5.jpg\ndeleted file mode 100644\nindex c274d68..0000000\nBinary files a/data/images/in/Johnson/Johnson_5.jpg and /dev/null differ\ndiff --git a/data/images/in/Park_Geun_hye/Park_Geun_hye_1.jpg b/data/images/in/Park_Geun_hye/Park_Geun_hye_1.jpg\ndeleted file mode 100644\nindex 9b14b5f..0000000\nBinary files a/data/images/in/Park_Geun_hye/Park_Geun_hye_1.jpg and /dev/null differ\ndiff --git a/data/images/in/Park_Geun_hye/Park_Geun_hye_2.jpg b/data/images/in/Park_Geun_hye/Park_Geun_hye_2.jpg\ndeleted file mode 100644\nindex 79b7f82..0000000\nBinary files a/data/images/in/Park_Geun_hye/Park_Geun_hye_2.jpg and /dev/null differ\ndiff --git a/data/images/in/Park_Geun_hye/Park_Geun_hye_3.jpg b/data/images/in/Park_Geun_hye/Park_Geun_hye_3.jpg\ndeleted file mode 100644\nindex 0196f1e..0000000\nBinary files a/data/images/in/Park_Geun_hye/Park_Geun_hye_3.jpg and /dev/null differ\ndiff --git a/data/images/in/Park_Geun_hye/Park_Geun_hye_4.jpg b/data/images/in/Park_Geun_hye/Park_Geun_hye_4.jpg\ndeleted file mode 100644\nindex e85d727..0000000\nBinary files a/data/images/in/Park_Geun_hye/Park_Geun_hye_4.jpg and /dev/null differ\ndiff --git a/data/images/in/Park_Geun_hye/Park_Geun_hye_5.jpg b/data/images/in/Park_Geun_hye/Park_Geun_hye_5.jpg\ndeleted file mode 100644\nindex 42b9a1f..0000000\nBinary files a/data/images/in/Park_Geun_hye/Park_Geun_hye_5.jpg and /dev/null differ\ndiff --git a/data/images/in/Trump/Trump_1.jpg b/data/images/in/Trump/Trump_1.jpg\ndeleted file mode 100644\nindex 2b9b399..0000000\nBinary files a/data/images/in/Trump/Trump_1.jpg and /dev/null differ\ndiff --git a/data/images/in/Trump/Trump_2.jpg b/data/images/in/Trump/Trump_2.jpg\ndeleted file mode 100644\nindex fefb60f..0000000\nBinary files a/data/images/in/Trump/Trump_2.jpg and /dev/null differ\ndiff --git a/data/images/in/Trump/Trump_3.jpg b/data/images/in/Trump/Trump_3.jpg\ndeleted file mode 100644\nindex bc1f713..0000000\nBinary files a/data/images/in/Trump/Trump_3.jpg and /dev/null differ\ndiff --git a/data/images/in/Trump/Trump_4.png b/data/images/in/Trump/Trump_4.png\ndeleted file mode 100644\nindex 73b6198..0000000\nBinary files a/data/images/in/Trump/Trump_4.png and /dev/null differ\ndiff --git a/data/images/test/Johnson_test.jpg b/data/images/test/Johnson_test.jpg\ndeleted file mode 100644\nindex a4f9841..0000000\nBinary files a/data/images/test/Johnson_test.jpg and /dev/null differ\ndiff --git a/data/images/test/Park_Geun_hye_test.jpg b/data/images/test/Park_Geun_hye_test.jpg\ndeleted file mode 100644\nindex f765aab..0000000\nBinary files a/data/images/test/Park_Geun_hye_test.jpg and /dev/null differ\ndiff --git a/data/images/test/Trump_test.jpg b/data/images/test/Trump_test.jpg\ndeleted file mode 100644\nindex 96f099c..0000000\nBinary files a/data/images/test/Trump_test.jpg and /dev/null differ\ndiff --git a/data/input/test/test.jpg b/data/input/test/test.jpg\ndeleted file mode 100644\nindex 96f099c..0000000\nBinary files a/data/input/test/test.jpg and /dev/null differ\ndiff --git a/data/test/Johnson_test.jpg b/data/test/Johnson_test.jpg\ndeleted file mode 100644\nindex a4f9841..0000000\nBinary files a/data/test/Johnson_test.jpg and /dev/null differ\ndiff --git a/imageAI/__pycache__/__init__.cpython-36.pyc b/imageAI/__pycache__/__init__.cpython-36.pyc\nindex 88d8175..ca9c3f4 100644\nBinary files a/imageAI/__pycache__/__init__.cpython-36.pyc and b/imageAI/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/imageAI/__pycache__/settings.cpython-36.pyc b/imageAI/__pycache__/settings.cpython-36.pyc\nindex e99158a..1a144c5 100644\nBinary files a/imageAI/__pycache__/settings.cpython-36.pyc and b/imageAI/__pycache__/settings.cpython-36.pyc differ\ndiff --git a/imageAI/__pycache__/urls.cpython-36.pyc b/imageAI/__pycache__/urls.cpython-36.pyc\nindex df043a4..4b1bb98 100644\nBinary files a/imageAI/__pycache__/urls.cpython-36.pyc and b/imageAI/__pycache__/urls.cpython-36.pyc differ\ndiff --git a/imageAI/__pycache__/wsgi.cpython-36.pyc b/imageAI/__pycache__/wsgi.cpython-36.pyc\nindex 682ea0b..73a3f38 100644\nBinary files a/imageAI/__pycache__/wsgi.cpython-36.pyc and b/imageAI/__pycache__/wsgi.cpython-36.pyc differ\ndiff --git a/major/__pycache__/__init__.cpython-36.pyc b/major/__pycache__/__init__.cpython-36.pyc\nindex 004a649..42a1397 100644\nBinary files a/major/__pycache__/__init__.cpython-36.pyc and b/major/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/major/__pycache__/views.cpython-36.pyc b/major/__pycache__/views.cpython-36.pyc\nindex fec4783..d77e1dd 100644\nBinary files a/major/__pycache__/views.cpython-36.pyc and b/major/__pycache__/views.cpython-36.pyc differ\ndiff --git a/major/services/align.py b/major/services/align.py\nnew file mode 100644\nindex 0000000..a3b3dbc\n--- /dev/null\n+++ b/major/services/align.py\n@@ -0,0 +1,10 @@\n+from major.utils.model_utils import align_set\n+from major.utils.const import Const as const\n+\n+\n+def align(setname):\n+    setname = const.TRAIN_SET_PRE + \'/\' +setname\n+    in_dir = setname + "/in"\n+    out_dir = setname + "/out"\n+    argv = [in_dir, out_dir]\n+    align_set(argv)\ndiff --git a/major/services/classify.py b/major/services/classify.py\nnew file mode 100644\nindex 0000000..4428dcd\n--- /dev/null\n+++ b/major/services/classify.py\n@@ -0,0 +1,15 @@\n+from major.utils.const import Const as const\n+from major.utils.model_utils import classfy_set\n+\n+\n+def classify(setname):\n+    setname = const.TRAIN_SET_PRE + \'/\' + setname\n+    out_dir = setname + "/out"\n+    model_path = const.MODEL_PATH\n+    classify_path = setname +  \'/\' +const.CLASSFY_SUF\n+    mode = "TRAIN"\n+    argv = [mode, out_dir, model_path, classify_path]\n+    print("out_dir:" + out_dir)\n+    print("model_path:" + model_path)\n+    print("classify_path:" + classify_path)\n+    classfy_set(argv)\n\\ No newline at end of file\ndiff --git a/major/services/predict.py b/major/services/predict.py\nindex 97233a0..a099c9b 100644\n--- a/major/services/predict.py\n+++ b/major/services/predict.py\n@@ -1,22 +1,32 @@\n from django.http import JsonResponse\n from major.utils import file_utils\n-import contributed.predict as pre\n+from major.utils.model_utils import predict_photo, create_set\n+from major.utils.const import Const as const\n import os\n \n \n-def predict(file_obj, model_path, clf_path):\n-    file_name = file_utils.save_file(file_obj)\n-    file_name = file_utils.transform_path(file_name)  # \xe8\xbd\xac\xe5\x8c\x96\xe4\xb8\xba\xe7\xbb\x9d\xe5\xaf\xb9\xe8\xb7\xaf\xe5\xbe\x84\xef\xbc\x8c\xe4\xb8\x8d\xe7\x84\xb6\xe5\xae\xb9\xe6\x98\x93\xe6\x89\xbe\xe4\xb8\x8d\xe5\x88\xb0\xe6\x96\x87\xe4\xbb\xb6\n-    model_path = file_utils.transform_path(model_path)\n-    clf_path = file_utils.transform_path(clf_path)\n-\n+def predict(file_obj, username, setname):\n+    userpath = const.USER_PRE + \'/\' + username\n+    setpath = const.TRAIN_SET_PRE + \'/\' +setname\n+    model_path = const.MODEL_PATH\n+    clf_path = setpath + \'/\' + const.CLASSFY_SUF\n+    file_name = file_utils.save_file(userpath, file_obj)\n+    print("file_name:")\n+    print(file_name)\n+    print("model_path:")\n+    print(model_path)\n+    print("clf_path:")\n+    print(clf_path)\n     argv = [file_name,\n             model_path,\n             clf_path]\n-    name, pos = pre.main(pre.parse_arguments(argv))\n+    name, pos = predict_photo(argv)\n     print(name)\n     print(pos)\n     res = JsonResponse({"result": name,\n                         "posibility": pos})\n     os.remove(file_name)  # \xe7\x94\xa8\xe5\xae\x8c\xe8\xaf\xb7\xe5\x88\xa0\xe9\x99\xa4\n-    return res\n\\ No newline at end of file\n+    return res\n+\n+if __name__ == \'__main__\':\n+    create_set("test_name")\n\\ No newline at end of file\ndiff --git a/major/utils/const.py b/major/utils/const.py\nnew file mode 100644\nindex 0000000..d884434\n--- /dev/null\n+++ b/major/utils/const.py\n@@ -0,0 +1,27 @@\n+class const(object):\n+    def __init__(self):\n+        self.__MODEL_PATH = \'data/20180402-114759/20180402-114759.pb\'\n+        self.__TRAIN_SET_PRE = \'data/train_sets\'\n+        self.__USER_PRE = \'data/user\'\n+        self.__CLASSFY_SUF = "classify/classes.pkl"\n+\n+    @property\n+    def MODEL_PATH(self):\n+        return self.__MODEL_PATH\n+\n+    @property\n+    def TRAIN_SET_PRE(self):\n+        return self.__TRAIN_SET_PRE\n+\n+    @property\n+    def USER_PRE(self):\n+        return self.__USER_PRE\n+\n+    @property\n+    def CLASSFY_SUF(self):\n+        return self.__CLASSFY_SUF\n+\n+\n+Const = const()\n+\n+\ndiff --git a/major/utils/file_utils.py b/major/utils/file_utils.py\nindex a02286d..c94a7ac 100644\n--- a/major/utils/file_utils.py\n+++ b/major/utils/file_utils.py\n@@ -1,14 +1,12 @@\n-import sys\n+import os\n \n \n-def save_file(file_obj):\n-    file_name = "data/test/" + file_obj.name\n-    f1 = open(file_name, "wb")\n+def save_file(path, file_obj):\n+    path = path + "/" + file_obj.name\n+    if os.path.exists(path):\n+        return False\n+    f1 = open(path, "wb")\n     for i in file_obj.chunks():\n         f1.write(i)\n     f1.close()\n-    return file_name\n-\n-\n-def transform_path(path):\n-    return sys.argv[0] + \'/../\' + path\n\\ No newline at end of file\n+    return path\ndiff --git a/major/utils/model_utils.py b/major/utils/model_utils.py\nnew file mode 100644\nindex 0000000..2fb4f04\n--- /dev/null\n+++ b/major/utils/model_utils.py\n@@ -0,0 +1,41 @@\n+import contributed.predict as pre\n+import src.align.align_dataset_mtcnn as align\n+import src.classifier as classifier\n+import os\n+from major.utils.file_utils import save_file\n+from major.utils.const import Const as const\n+\n+\n+def predict_photo(argv):\n+    return pre.main(pre.parse_arguments(argv))\n+\n+\n+def align_set(argv):\n+    align.main(align.parse_arguments(argv))\n+\n+\n+def classfy_set(argv):\n+    classifier.main(classifier.parse_arguments(argv))\n+\n+\n+def transform_setname(setname):\n+    return const.TRAIN_SET_PRE + \'/\' + setname\n+\n+\n+def create_set(setname):\n+    path = transform_setname(setname)\n+    if os.path.exists(path):\n+        return False\n+    os.mkdir(path)\n+    os.mkdir(path + "/in")\n+    os.mkdir(path + "/out")\n+    os.mkdir(path + "/classify")\n+    return True\n+\n+\n+def add_photo(setname, file_obj, label):\n+    path = transform_setname(setname + "/in/" + label)\n+    if not os.path.exists(path):\n+        os.makedirs(path)\n+    return save_file(path, file_obj)\n+\ndiff --git a/major/utils/user_utils.py b/major/utils/user_utils.py\nnew file mode 100644\nindex 0000000..d6e7053\n--- /dev/null\n+++ b/major/utils/user_utils.py\n@@ -0,0 +1,13 @@\n+import os\n+\n+\n+def transform_username(username):\n+    return "data/user/" + username\n+\n+\n+def create_user_dir(username):\n+    path = transform_username(username)\n+    if os.path.exists(path):\n+        return False\n+    os.mkdir(path)\n+    return True\ndiff --git a/major/views.py b/major/views.py\nindex 5d1b422..c7dfdeb 100644\n--- a/major/views.py\n+++ b/major/views.py\n@@ -1,7 +1,12 @@\n from django.shortcuts import render\n from django.http import JsonResponse\n from major.services.predict import predict\n-# Create your views here.\n+from major.services.align import align\n+from major.services.classify import classify\n+import sys\n+from major.utils.model_utils import create_set, add_photo\n+from major.utils.user_utils import create_user_dir\n+from major.utils.const import Const as const\n \n \n def index(request):\n@@ -9,12 +14,28 @@ def index(request):\n         try:\n             state = request.POST.get("state")  # \xe8\x8e\xb7\xe5\x8f\x96state\xe5\x8f\x82\xe6\x95\xb0\xe5\x80\xbc\n             file_obj = request.FILES.get("up_image")  # \xe8\x8e\xb7\xe5\x8f\x96\xe5\x9b\xbe\xe7\x89\x87\n-            print(state)\n-            if (state == 1 or True):  # \xe6\x9a\x82\xe5\xae\x9astate==1\xe4\xb8\xba\xe8\xaf\x86\xe5\x88\xab\n-                model_path = \'data/20180402-114759/20180402-114759.pb\'  # \xe6\xa8\xa1\xe5\x9e\x8b\xe8\xb7\xaf\xe5\xbe\x84\n-                clf_path = \'data/classify/classes.pkl\'  # \xe5\x88\x86\xe7\xb1\xbb\xe5\x99\xa8\xe8\xb7\xaf\xe5\xbe\x84\n+            username = "admin"\n+            trainset = "admin_set"\n+            res = JsonResponse({"result": sys.argv[0]})\n+            print("state:" + state)\n+\n+            if (state == \'1\'):  # \xe6\x9a\x82\xe5\xae\x9astate==1\xe4\xb8\xba\xe8\xaf\x86\xe5\x88\xab\n+                #create_set("admin_set")\n+                #create_user_dir("admin")\n+                res = predict(file_obj = file_obj, username=username, setname=trainset)\n+\n+            elif(state == \'0\'):\n+                align(trainset)\n+                classify(trainset)\n+\n+            else:   #\xe6\x9a\x82\xe5\xae\x9a0\xe4\xb8\xba\xe4\xb8\x8a\xe4\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\n+                label = state\n+                create_set(trainset)\n+                if add_photo(setname = trainset, file_obj = file_obj, label = label) == False:\n+                    res = JsonResponse({"result": "\xe4\xb8\x8a\xe4\xbc\xa0\xe5\xa4\xb1\xe8\xb4\xa5\xef\xbc\x8c\xe5\x90\x8c\xe5\x90\x8d\xe6\x96\x87\xe4\xbb\xb6\xe5\xb7\xb2\xe5\xad\x98\xe5\x9c\xa8"})\n+\n+\n \n-                res = predict(file_obj, model_path, clf_path)\n         except Exception as e:\n             return JsonResponse({"result": "System Error!\\n" + repr(e)})\n \ndiff --git a/src/__pycache__/__init__.cpython-36.pyc b/src/__pycache__/__init__.cpython-36.pyc\nindex b245e2f..9de7b98 100644\nBinary files a/src/__pycache__/__init__.cpython-36.pyc and b/src/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/src/__pycache__/facenet.cpython-36.pyc b/src/__pycache__/facenet.cpython-36.pyc\nindex 58f0ffa..27665f1 100644\nBinary files a/src/__pycache__/facenet.cpython-36.pyc and b/src/__pycache__/facenet.cpython-36.pyc differ\ndiff --git a/src/align/__pycache__/__init__.cpython-36.pyc b/src/align/__pycache__/__init__.cpython-36.pyc\nindex e9dfd50..c5935d6 100644\nBinary files a/src/align/__pycache__/__init__.cpython-36.pyc and b/src/align/__pycache__/__init__.cpython-36.pyc differ\ndiff --git a/src/align/__pycache__/detect_face.cpython-36.pyc b/src/align/__pycache__/detect_face.cpython-36.pyc\nindex 4f84554..71185f9 100644\nBinary files a/src/align/__pycache__/detect_face.cpython-36.pyc and b/src/align/__pycache__/detect_face.cpython-36.pyc differ\ndiff --git a/src/classifier.py b/src/classifier.py\nindex 749db4d..536e0ea 100644\n--- a/src/classifier.py\n+++ b/src/classifier.py\n@@ -29,7 +29,7 @@ from __future__ import print_function\n import tensorflow as tf\n import numpy as np\n import argparse\n-import facenet\n+import src.facenet as facenet\n import os\n import sys\n import math'